{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jarrod\\\\Documents\\\\GitHub\\\\APDS7311POEAJ\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport { useAuthenticationContext } from '../hooks/useAuthenticationContext';\nimport { useAdminAuthenticationContext } from '../hooks/useAdminAuthenticationContext';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requireAdmin = false\n}) => {\n  _s();\n  const {\n    user\n  } = useAuthenticationContext();\n  const {\n    admin\n  } = useAdminAuthenticationContext();\n  if (requireAdmin && !admin) {\n    // Redirect non-admin users trying to access admin routes\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  if (!requireAdmin && !user) {\n    // Redirect to login if a user is not authenticated\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  if (requireAdmin && user) {\n    // Redirect users to home if they attempt to access admin routes\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"wJkHAwHILshP8EmDDwQrcsujJGE=\", false, function () {\n  return [useAuthenticationContext, useAdminAuthenticationContext];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["useAuthenticationContext","useAdminAuthenticationContext","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","requireAdmin","_s","user","admin","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jarrod/Documents/GitHub/APDS7311POEAJ/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import { useAuthenticationContext } from '../hooks/useAuthenticationContext'\r\nimport { useAdminAuthenticationContext } from '../hooks/useAdminAuthenticationContext'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nconst ProtectedRoute = ({ children, requireAdmin = false }) => {\r\n  const { user } = useAuthenticationContext()\r\n  const { admin } = useAdminAuthenticationContext()\r\n\r\n  if (requireAdmin && !admin) {\r\n    // Redirect non-admin users trying to access admin routes\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  if (!requireAdmin && !user) {\r\n    // Redirect to login if a user is not authenticated\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  if (requireAdmin && user) {\r\n    // Redirect users to home if they attempt to access admin routes\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  return children\r\n}\r\n\r\nexport default ProtectedRoute\r\n"],"mappings":";;AAAA,SAASA,wBAAwB,QAAQ,mCAAmC;AAC5E,SAASC,6BAA6B,QAAQ,wCAAwC;AACtF,SAASC,QAAQ,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,YAAY,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM;IAAEC;EAAK,CAAC,GAAGT,wBAAwB,CAAC,CAAC;EAC3C,MAAM;IAAEU;EAAM,CAAC,GAAGT,6BAA6B,CAAC,CAAC;EAEjD,IAAIM,YAAY,IAAI,CAACG,KAAK,EAAE;IAC1B;IACA,oBAAON,OAAA,CAACF,QAAQ;MAACS,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAEA,IAAI,CAACR,YAAY,IAAI,CAACE,IAAI,EAAE;IAC1B;IACA,oBAAOL,OAAA,CAACF,QAAQ;MAACS,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAEA,IAAIR,YAAY,IAAIE,IAAI,EAAE;IACxB;IACA,oBAAOL,OAAA,CAACF,QAAQ;MAACS,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAEA,OAAOT,QAAQ;AACjB,CAAC;AAAAE,EAAA,CApBKH,cAAc;EAAA,QACDL,wBAAwB,EACvBC,6BAA6B;AAAA;AAAAe,EAAA,GAF3CX,cAAc;AAsBpB,eAAeA,cAAc;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}