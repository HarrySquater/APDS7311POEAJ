{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jarrod\\\\Documents\\\\GitHub\\\\APDS7311POEAJ\\\\frontend\\\\src\\\\pages\\\\adminLogin.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAdminLogin } from '../hooks/useAdminLogin';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport '../CSS/AdminLogin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  const [idNumber, setIdNumber] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    adminLogin,\n    isLoading,\n    error\n  } = useAdminLogin();\n  const [setCsrfToken] = useState(null);\n  const navigate = useNavigate();\n  const refreshCsrfToken = async () => {\n    const response = await fetch('/api/csrf-token', {\n      method: 'GET',\n      credentials: 'include' // include credentials to receive the CSRF cookie\n    });\n    const data = await response.json();\n    setCsrfToken(data.csrfToken); // Update your CSRF token state\n  };\n  const handleAdminLogin = async e => {\n    e.preventDefault();\n    const response = await adminLogin(idNumber, password);\n    if (response.ok) {\n      await refreshCsrfToken();\n      navigate('/AdminDashboard');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"admin-login-title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-login-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAdminLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"admin-login-label\",\n          children: [\"ID Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"admin-login-input\",\n            type: \"text\",\n            onChange: e => setIdNumber(e.target.value),\n            value: idNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"admin-login-label\",\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"admin-login-input\",\n            type: \"password\",\n            onChange: e => setPassword(e.target.value),\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-login-button-container\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: \"admin-login-button\",\n            type: \"submit\",\n            disabled: isLoading,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminLogin, \"ZambEyjWS4aQrRbrnTazwbeFK90=\", false, function () {\n  return [useAdminLogin, useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["useState","useAdminLogin","useNavigate","Button","jsxDEV","_jsxDEV","AdminLogin","_s","idNumber","setIdNumber","password","setPassword","adminLogin","isLoading","error","setCsrfToken","navigate","refreshCsrfToken","response","fetch","method","credentials","data","json","csrfToken","handleAdminLogin","e","preventDefault","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","value","variant","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Jarrod/Documents/GitHub/APDS7311POEAJ/frontend/src/pages/adminLogin.js"],"sourcesContent":["import { useState } from 'react'\r\nimport { useAdminLogin } from '../hooks/useAdminLogin'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Button from '@mui/material/Button'\r\nimport '../CSS/AdminLogin.css'\r\n\r\nconst AdminLogin = () => {\r\n  const [idNumber, setIdNumber] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const { adminLogin, isLoading, error } = useAdminLogin()\r\n  const [setCsrfToken] = useState(null)\r\n  const navigate = useNavigate()\r\n\r\n  const refreshCsrfToken = async () => {\r\n    const response = await fetch('/api/csrf-token', {\r\n      method: 'GET',\r\n      credentials: 'include', // include credentials to receive the CSRF cookie\r\n    })\r\n    const data = await response.json()\r\n    setCsrfToken(data.csrfToken) // Update your CSRF token state\r\n  }\r\n\r\n  const handleAdminLogin = async (e) => {\r\n    e.preventDefault()\r\n    const response = await adminLogin(idNumber, password)\r\n    if (response.ok) {\r\n      await refreshCsrfToken()\r\n      navigate('/AdminDashboard')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-login-container\">\r\n      <h1 className=\"admin-login-title\">Login</h1>\r\n      <div className=\"admin-login-form-container\">\r\n        <form onSubmit={handleAdminLogin}>\r\n          <label className=\"admin-login-label\">\r\n            ID Number:\r\n            <input\r\n              className=\"admin-login-input\"\r\n              type=\"text\"\r\n              onChange={(e) => setIdNumber(e.target.value)}\r\n              value={idNumber}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label className=\"admin-login-label\">\r\n            Password:\r\n            <input\r\n              className=\"admin-login-input\"\r\n              type=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n            />\r\n          </label>\r\n          <br />\r\n          <div className=\"admin-login-button-container\">\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"admin-login-button\"\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n            >\r\n              Login\r\n            </Button>\r\n          </div>\r\n          {error && <div className=\"error\">{error}</div>}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminLogin\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}