{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAdminAuthenticationContext } from './useAdminAuthenticationContext';\nexport const useAdminLogout = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    dispatch\n  } = useAdminAuthenticationContext();\n  const [csrfToken, setCsrfToken] = useState(null);\n\n  //fetch csrf\n  useEffect(() => {\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await fetch('/api/csrf-token');\n        const data = await response.json();\n        setCsrfToken(data.csrfToken);\n      } catch (error) {\n        console.error('Failed to fetch CSRF token:', error);\n      }\n    };\n    fetchCsrfToken();\n  }, []);\n  const adminLogout = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('/api/admin/logoutadmin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'CSRF-Token': csrfToken\n        }\n      });\n      const json = await response.json();\n      if (response.ok) {\n        // Successfully logged out\n        localStorage.removeItem('admin');\n        dispatch({\n          type: 'ADMINLOGOUT'\n        });\n        window.location.href = '/';\n      } else {\n        setError(json.error || 'Failed to log out');\n      }\n    } catch (error) {\n      setError('An error occurred during logout');\n      console.error('Error during logout:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    adminLogout,\n    isLoading,\n    error\n  };\n};\n_s(useAdminLogout, \"QwJFx4Bjuo7Xf1fJKp9RhNtceVA=\", false, function () {\n  return [useAdminAuthenticationContext];\n});","map":{"version":3,"names":["useState","useEffect","useAdminAuthenticationContext","useAdminLogout","_s","error","setError","isLoading","setIsLoading","dispatch","csrfToken","setCsrfToken","fetchCsrfToken","response","fetch","data","json","console","adminLogout","method","headers","ok","localStorage","removeItem","type","window","location","href"],"sources":["C:/Users/Jarrod/Documents/GitHub/APDS7311POEAJ/frontend/src/hooks/useAdminLogout.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useAdminAuthenticationContext } from './useAdminAuthenticationContext'\r\n\r\nexport const useAdminLogout = () => {\r\n  const [error, setError] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { dispatch } = useAdminAuthenticationContext()\r\n  const [csrfToken, setCsrfToken] = useState(null)\r\n\r\n  //fetch csrf\r\n  useEffect(() => {\r\n    const fetchCsrfToken = async () => {\r\n      try {\r\n        const response = await fetch('/api/csrf-token')\r\n        const data = await response.json()\r\n        setCsrfToken(data.csrfToken)\r\n      } catch (error) {\r\n        console.error('Failed to fetch CSRF token:', error)\r\n      }\r\n    }\r\n    fetchCsrfToken()\r\n  }, [])\r\n\r\n  const adminLogout = async () => {\r\n    setIsLoading(true)\r\n    setError(null)\r\n\r\n    try {\r\n      const response = await fetch('/api/admin/logoutadmin', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'CSRF-Token': csrfToken,\r\n        },\r\n      })\r\n\r\n      const json = await response.json()\r\n\r\n      if (response.ok) {\r\n        // Successfully logged out\r\n        localStorage.removeItem('admin')\r\n        dispatch({ type: 'ADMINLOGOUT' })\r\n        window.location.href = '/'\r\n      } else {\r\n        setError(json.error || 'Failed to log out')\r\n      }\r\n    } catch (error) {\r\n      setError('An error occurred during logout')\r\n      console.error('Error during logout:', error)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return { adminLogout, isLoading, error }\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,6BAA6B,QAAQ,iCAAiC;AAE/E,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAES;EAAS,CAAC,GAAGP,6BAA6B,CAAC,CAAC;EACpD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,CAAC;QAC/C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,YAAY,CAACI,IAAI,CAACL,SAAS,CAAC;MAC9B,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdY,OAAO,CAACZ,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDO,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BV,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;QACrDK,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,YAAY,EAAEV;QAChB;MACF,CAAC,CAAC;MAEF,MAAMM,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAIH,QAAQ,CAACQ,EAAE,EAAE;QACf;QACAC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;QAChCd,QAAQ,CAAC;UAAEe,IAAI,EAAE;QAAc,CAAC,CAAC;QACjCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;MAC5B,CAAC,MAAM;QACLrB,QAAQ,CAACU,IAAI,CAACX,KAAK,IAAI,mBAAmB,CAAC;MAC7C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,QAAQ,CAAC,iCAAiC,CAAC;MAC3CW,OAAO,CAACZ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRG,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAEU,WAAW;IAAEX,SAAS;IAAEF;EAAM,CAAC;AAC1C,CAAC;AAAAD,EAAA,CApDYD,cAAc;EAAA,QAGJD,6BAA6B;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}