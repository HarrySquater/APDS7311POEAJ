{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useAdminAuthenticationContext } from './useAdminAuthenticationContext';\nexport const useAdminLogout = () => {\n  _s();\n  const {\n    dispatch\n  } = useAdminAuthenticationContext();\n  const [csrfToken, setCsrfToken] = useState(null);\n\n  // Function to fetch a new CSRF token\n  const refreshCsrfToken = async () => {\n    const response = await fetch('/api/csrf-token');\n    const data = await response.json();\n    setCsrfToken(data.csrfToken);\n  };\n  const adminLogout = async () => {\n    const response = await fetch('/api/admin/adminlogout', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      localStorage.removeItem('admin');\n      dispatch({\n        type: 'ADMINLOGOUT'\n      });\n      await refreshCsrfToken(); // Refresh CSRF token after admin logout\n    } else {\n      console.error('Failed to log out');\n    }\n  };\n  return {\n    adminLogout\n  };\n};\n_s(useAdminLogout, \"8WIaw3o6m+kH74CTH1wVHe5Ggsw=\", false, function () {\n  return [useAdminAuthenticationContext];\n});","map":{"version":3,"names":["useAdminAuthenticationContext","useAdminLogout","_s","dispatch","csrfToken","setCsrfToken","useState","refreshCsrfToken","response","fetch","data","json","adminLogout","method","headers","ok","localStorage","removeItem","type","console","error"],"sources":["C:/Users/Jarrod/Documents/GitHub/APDS7311POEAJ/frontend/src/hooks/useAdminLogout.js"],"sourcesContent":["import { useAdminAuthenticationContext } from './useAdminAuthenticationContext'\r\n\r\nexport const useAdminLogout = () => {\r\n  const { dispatch } = useAdminAuthenticationContext()\r\n  const [csrfToken, setCsrfToken] = useState(null)\r\n\r\n  // Function to fetch a new CSRF token\r\n  const refreshCsrfToken = async () => {\r\n    const response = await fetch('/api/csrf-token')\r\n    const data = await response.json()\r\n    setCsrfToken(data.csrfToken)\r\n  }\r\n\r\n  const adminLogout = async () => {\r\n    const response = await fetch('/api/admin/adminlogout', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n\r\n    if (response.ok) {\r\n      localStorage.removeItem('admin')\r\n\r\n      dispatch({ type: 'ADMINLOGOUT' })\r\n      await refreshCsrfToken() // Refresh CSRF token after admin logout\r\n    } else {\r\n      console.error('Failed to log out')\r\n    }\r\n  }\r\n\r\n  return { adminLogout }\r\n}\r\n"],"mappings":";AAAA,SAASA,6BAA6B,QAAQ,iCAAiC;AAE/E,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAS,CAAC,GAAGH,6BAA6B,CAAC,CAAC;EACpD,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,CAAC;IAC/C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCN,YAAY,CAACK,IAAI,CAACN,SAAS,CAAC;EAC9B,CAAC;EAED,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;MACrDI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAIN,QAAQ,CAACO,EAAE,EAAE;MACfC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;MAEhCd,QAAQ,CAAC;QAAEe,IAAI,EAAE;MAAc,CAAC,CAAC;MACjC,MAAMX,gBAAgB,CAAC,CAAC,EAAC;IAC3B,CAAC,MAAM;MACLY,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;IACpC;EACF,CAAC;EAED,OAAO;IAAER;EAAY,CAAC;AACxB,CAAC;AAAAV,EAAA,CA9BYD,cAAc;EAAA,QACJD,6BAA6B;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}