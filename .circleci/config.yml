version: 2.1
orbs:
  node: circleci/node@5

jobs:
  sonarqube:
    docker:
      - image: sonarsource/sonar-scanner-cli
    resource_class: small
    steps:
      - checkout
      - run:
          name: Run SonarQube Analysis
          command: |
            SONAR_BRANCH="${CIRCLE_BRANCH:-main}"
            echo "Sonar branch value is: " $SONAR_BRANCH
            echo "Sonar org value is: " $SONAR_ORG
            sonar-scanner \
              -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
              -Dsonar.organization="$SONAR_ORG" \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.exclusions="**/node_modules/**,**/android/**,**/ios/**" \
              -Dsonar.coverage.exclusions="**/*" \
              -Dsonar.c.file.suffixes=- \
              -Dsonar.cpp.file.suffixes=- \
              -Dsonar.objc.file.suffixes=- \
              -Dsonar.login="$SONAR_TOKEN" \
              -Dsonar.branch.name="$SONAR_BRANCH" \
              -Dsonar.sources="." \
              -Dsonar.secret.regex="^(?=.*\b(token|password|key|secret)\b).*$"

  build-frontend:
    docker:
      - image: cimg/node:lts
    working_directory: ~/frontend
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-cache-frontend-{{ .Branch }}-{{ checksum "frontend/package-lock.json" }}
      - run:
          name: Install Frontend Dependencies
          command: npm install --prefix frontend
      - save_cache:
          paths:
            - ./frontend/node_modules
          key: npm-cache-frontend-{{ .Branch }}-{{ checksum "frontend/package-lock.json" }}
      - run:
          name: Set Permissions
          command: chmod -R 755 frontend/node_modules
      - run:
          name: Build Frontend
          command: npm run build --prefix frontend

  build-backend:
    docker:
      - image: cimg/node:lts
    working_directory: ~/backend
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-cache-backend-{{ .Branch }}-{{ checksum "backend/package-lock.json" }}
      - run:
          name: Install Backend Dependencies
          command: npm install --prefix backend
      - save_cache:
          paths:
            - ./backend/node_modules
          key: npm-cache-backend-{{ .Branch }}-{{ checksum "backend/package-lock.json" }}
      - run:
          name: Start Backend
          command: npm run dev --prefix backend & sleep 10

  lint-frontend:
    docker:
      - image: cimg/node:lts
    working_directory: ~/frontend
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-cache-frontend-{{ .Branch }}-{{ checksum "frontend/package-lock.json" }}
      - run:
          name: Install Frontend Dependencies
          command: npm install --prefix frontend
      - save_cache:
          paths:
            - ./frontend/node_modules
          key: npm-cache-frontend-{{ .Branch }}-{{ checksum "frontend/package-lock.json" }}
      - run:
          name: Lint Frontend Code
          command: npm run lint --prefix frontend || echo "Linting completed with warnings/errors."

workflows:
  main-workflow:
    jobs:
      - build-frontend
      - build-backend
      - sonarqube
      - lint-frontend
